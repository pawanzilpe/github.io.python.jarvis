import speech_recognition as sr
import os
import webbrowser
import pyttsx3

# Define base styles for all templates
BASE_STYLE = """
    body { font-family: Arial, sans-serif; margin: 40px; }
    header { background-color: #f0f0f0; padding: 20px; text-align: center; }
    main { margin: 20px; }
    footer { background-color: #333; color: white; text-align: center; padding: 10px; }
    section { margin-bottom: 30px; }
    h1, h2 { color: #333; }
    ul { list-style-type: none; padding: 0; }
    li { margin: 10px 0; }
    .gallery { display: flex; flex-wrap: wrap; gap: 15px; }
    .gallery-item { 
        width: 150px; 
        height: 150px; 
        background-color: #e0e0e0; 
        display: flex; 
        align-items: center; 
        justify-content: center; 
        border-radius: 8px; 
    }
    .product { 
        border: 1px solid #ddd; 
        padding: 15px; 
        margin: 10px 0; 
        border-radius: 8px; 
    }
"""

def generate_html(title, content):
    """Generate HTML with consistent structure and styling"""
    return f"""
    <!DOCTYPE html>
    <html>
    <head>
        <title>{title}</title>
        <style>{BASE_STYLE}</style>
    </head>
    <body>
        <header>
            <h1>{title}</h1>
        </header>
        
        <main>{content}</main>
        
        <footer>
            <p>Voice Generated Website | Python Project</p>
        </footer>
    </body>
    </html>
    """

def generate_website(command):
    """Generate specialized HTML based on voice command content"""
    command = command.lower()
    
    # Business template
    if 'business' in command:
        content = """
        <section>
            <h2>Our Services</h2>
            <ul>
                <li>Professional Consulting</li>
                <li>Strategic Planning</li>
                <li>Marketing Solutions</li>
            </ul>
        </section>
        <section>
            <h2>Client Testimonials</h2>
            <p>"Excellent service and results!" - Sarah Johnson</p>
            <p>"Transformed our business operations" - Michael Chen</p>
        </section>
        <section>
            <h2>Contact Us</h2>
            <p>Email: contact@business.com</p>
            <p>Phone: (555) 123-4567</p>
        </section>
        """
        return generate_html("Professional Business Solutions", content)

    # Portfolio template
    elif 'portfolio' in command or 'gallery' in command:
        content = """
        <section>
            <h2>My Creative Works</h2>
            <div class="gallery">
                <div class="gallery-item">Design Project</div>
                <div class="gallery-item">Photo Collection</div>
                <div class="gallery-item">Web Application</div>
                <div class="gallery-item">Brand Identity</div>
                <div class="gallery-item">Mobile UI</div>
                <div class="gallery-item">Illustration</div>
            </div>
        </section>
        <section>
            <h2>Skills & Expertise</h2>
            <ul>
                <li>Graphic Design</li>
                <li>Web Development</li>
                <li>Digital Marketing</li>
                <li>User Experience</li>
            </ul>
        </section>
        """
        return generate_html("Creative Portfolio Showcase", content)

    # Blog template
    elif 'blog' in command or 'news' in command:
        content = """
        <section>
            <article>
                <h2>Getting Started with Voice Technology</h2>
                <p>Published: January 15, 2023</p>
                <p>Voice interfaces are transforming how we interact with digital systems...</p>
            </article>
            <article>
                <h2>The Future of Web Development</h2>
                <p>Published: February 2, 2023</p>
                <p>Emerging trends in web development include AI integration, voice commands...</p>
            </article>
            <article>
                <h2>Building Accessible Websites</h2>
                <p>Published: March 8, 2023</p>
                <p>Creating inclusive web experiences benefits all users and expands your audience...</p>
            </article>
        </section>
        <section>
            <h2>Subscribe for Updates</h2>
            <p>Enter your email to receive notifications of new posts:</p>
            <form>
                <input type="email" placeholder="your@email.com">
                <button type="submit">Subscribe</button>
            </form>
        </section>
        """
        return generate_html("Thoughts & Insights Blog", content)

    # Default template
    else:
        content = f"""
        <section>
            <h2>About This Site</h2>
            <p>This website was generated by voice command!</p>
            <p>You asked for: "{command}"</p>
        </section>
        <section>
            <h2>Get Started</h2>
            <p>Try commands like:</p>
            <ul>
                <li>"Create business website"</li>
                <li>"Make portfolio site"</li>
                <li>"Generate blog"</li>
            </ul>
        </section>
        """
        return generate_html(f"{command.capitalize()} Website", content)

# The rest of the code remains the same as the original
# (voice_to_text, text_to_speech, main functions)

def voice_to_text():
    """Convert voice input to text using offline recognition"""
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening for website command...")
        audio = r.listen(source, timeout=8)
    
    try:
        command = r.recognize_sphinx(audio)
        print("Command:", command)
        return command.lower()
    except sr.UnknownValueError:
        return "error"
    except sr.RequestError:
        return "error"

def text_to_speech(message):
    """Convert text to speech for feedback"""
    engine = pyttsx3.init()
    engine.say(message)
    engine.runAndWait()

def main():
    text_to_speech("Welcome to Voice Website Generator. What type of website do you want to create?")
    
    while True:
        command = voice_to_text()
        
        if "error" in command:
            text_to_speech("Sorry, I didn't catch that. Please try again.")
            continue
            
        if "exit" in command:
            text_to_speech("Exiting program. Goodbye!")
            break
            
        # Generate website
        html_content = generate_website(command)
        
        # Save to file
        filename = f"{command.replace(' ', '_')}_website.html"
        with open(filename, "w") as f:
            f.write(html_content)
        
        # Feedback and open
        text_to_speech(f"Generated {command} website successfully!")
        webbrowser.open(f'file://{os.path.abspath(filename)}')
        
        # Ask for next action
        text_to_speech("Say another command or 'exit' to quit")

if __name__ == "__main__":
    main()